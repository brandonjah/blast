!!!
%html{:lang => "en"}
  %head
    %meta{:charset => "utf-8"}/
    %meta{:content => "IE=Edge,chrome=1", "http-equiv" => "X-UA-Compatible"}/
    %meta{:content => "width=device-width, initial-scale=1.0", :name => "viewport"}/
    = metamagic
    %title= content_for?(:title) ? yield(:title) : "SocialBlast"
    = csrf_meta_tags
    / Le HTML5 shim, for IE6-8 support of HTML elements
    = stylesheet_link_tag "application", :media => "all"
    / For third-generation iPad with high-resolution Retina display:
    / Size should be 144 x 144 pixels
    = favicon_link_tag 'apple-touch-icon-144x144-precomposed.png', :rel => 'apple-touch-icon-precomposed', :type => 'image/png', :sizes => '144x144'
    / For iPhone with high-resolution Retina display:
    / Size should be 114 x 114 pixels
    = favicon_link_tag 'apple-touch-icon-114x114-precomposed.png', :rel => 'apple-touch-icon-precomposed', :type => 'image/png', :sizes => '114x114'
    / For first- and second-generation iPad:
    / Size should be 72 x 72 pixels
    = favicon_link_tag 'apple-touch-icon-72x72-precomposed.png', :rel => 'apple-touch-icon-precomposed', :type => 'image/png', :sizes => '72x72'
    / For non-Retina iPhone, iPod Touch, and Android 2.1+ devices:
    / Size should be 57 x 57 pixels
    = favicon_link_tag 'apple-touch-icon-precomposed.png', :rel => 'apple-touch-icon-precomposed', :type => 'image/png'
    / For all other devices
    / Size should be 32 x 32 pixels
    = favicon_link_tag 'favicon.ico', :rel => 'shortcut icon'
    = javascript_include_tag "application"
    = render "layouts/analytics"
    = yield :head
  %body
    #fb-root
    :javascript
      function checkLoginState() {
        FB.getLoginStatus(function(response) {
          statusChangeCallback(response);
        });
      }
      function statusChangeCallback(response) {
        console.log('statusChangeCallback');
        console.log(response);
        console.log(response['authResponse']);
        // The response object is returned with a status field that lets the
        // app know the current login status of the person.
        // Full docs on the response object can be found in the documentation
        // for FB.getLoginStatus().
        if (response.status === 'connected') {
          // Logged into your app and Facebook.
          console.log("connected");
          $.post( "/auth/facebook/callback", { token: response['authResponse']['accessToken'] });
        } else if (response.status === 'not_authorized') {
          // The person is logged into Facebook, but not your app.
          document.getElementById('status').innerHTML = 'Please log ' +
            'into this app.';
        } else {
          // The person is not logged into Facebook, so we're not sure if
          // they are logged into this app or not.
          document.getElementById('status').innerHTML = 'Please log ' +
            'into Facebook.';
        }
      }
      window.fbAsyncInit = function() {
        FB.init({
          appId      : '1590985894449459',
          xfbml      : true,
          cookie     : true,
          version    : 'v2.2'
        });
      };

      (function(d, s, id){
         var js, fjs = d.getElementsByTagName(s)[0];
         if (d.getElementById(id)) {return;}
         js = d.createElement(s); js.id = id;
         js.src = "//connect.facebook.net/en_US/sdk.js";
         fjs.parentNode.insertBefore(js, fjs);
       }(document, 'script', 'facebook-jssdk'));
    = bootstrap_flash
    = yield
  = render 'layouts/schedule_tweet_modal'