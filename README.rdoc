== README

* \c social_development

http://blowfish.stage.staging.c66.me/
http://bobcat.blast.c66.me/

<h4>run delayed jobs</h4>
rake jobs:work

<h2>GIT info</h2>
git pull
git add .
git commit -am "this is a commit message"
git push

<h2>CLOUD 66 INFO</h2>
cx executable is in /usr/local/bin

cx redeploy -s stage

Usage: cx <command> [-s stack] [-e environment] [options] [arguments]


Commands:

    stacks           list stacks
    redeploy         redeploys stack
    open             opens the web browser to visit the app served by the stack
    settings         lists stack settings
    set              sets the value of a setting on a stack
    server-settings  lists server settings
    server-set       sets the value of a setting on a server
    env-vars         lists environement variables
    env-vars-set     sets the value of an environment variable on a stack
    lease            leases firewall access to the given server on the stack
    restart          restarts the stack.
    run              executes a command directly on the server
    servers          lists all the servers of a stack.
    ssh              starts a ssh shell into the server
    tail             shows and tails the logfile specified on the given server
    upload           copies a file from your local computer to the remote server
    download         copies a file from the remote server to your local computer
    backups          lists all the managed backups of a stack
    download-backup  downloads a database backup
    clear-caches     clears all existing stack code caches
    version          show cx version
    info             shows information about your account, toolbelt and the current directory or the specified stack
logout

<h4>Delayed job - Cloud66</h4>
Procfile in root of application starts the worker

<h4>Connecting to servers Cloud66</h4>

Connect to PSQL:
<pre>
cx ssh -s stage Blowfish
cx ssh -s blast Bobcat
sudo -u postgres psql
</pre>


Run migration:
<pre>
cd $STACK_PATH
bundle exec rake db:migrate
</pre>

TO START WORKING LOCALLY:
- git pull
- start postgres
- navigate to blast directory (cd blast)
- enter "rails s"
- git add --all (if you've added or removed files)
- git commit -am "updating readme"
- git push
